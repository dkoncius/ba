import React, { useContext, useEffect, useState } from 'react';
import { BiFilterAlt } from "react-icons/bi";
import ContentFiltering from '../../components/ContentPage/ContentFiltering';
import AddImage from '../../components/ImagesPage/AddImage';
import ImageGallery from '../../components/ImagesPage/ImageGallery';
import { db } from '../../firebase/firebase-config'; // Make sure this path is correct
import { collection, getDocs } from 'firebase/firestore';
import UserContext from '../../contexts/UserContext';

const ImagesPage = () => {
  const {user} = useContext(UserContext)
  const [selectedImage, setSelectedImage] = useState(null);
  const [data, setData] = useState([]);
  const [isFiltering, setIsFiltering] = useState(false);
  const [imagePage, setImagePage] = useState(false);

  useEffect(() => {
    const fetchImages = async () => {
      if(!user) return
      const imagesCollectionRef = collection(db, `users/${user.uid}/images`);
      try {
        const imagesSnapshot = await getDocs(imagesCollectionRef);
        const imagesList = imagesSnapshot.docs.map(doc => ({
          id: doc.id, // The unique ID generated by Firestore for each document
          ...doc.data(), // Spread the rest of the document data
        }));
        setData(imagesList);
      } catch (error) {
        console.error("Error fetching images: ", error);
        setData([]); // Optional: clear data or handle error as needed
      }
    };
  
    fetchImages();
  }, [user]);
  

  return (
    <div className="container">
      <div className="content-filter">
        <BiFilterAlt className="filter-icon" onClick={() => setIsFiltering(!isFiltering)} />
        <button 
          className="button-green"
          onClick={() => setImagePage(true)}
        >
          Pridėti nuotrauką +
        </button>
      </div>
  
      {isFiltering ? 
        <ContentFiltering setIsFiltering={setIsFiltering}/> : 
        <ImageGallery data={data} selectedImage={selectedImage} setSelectedImage={setSelectedImage}/>
      }
  
      {imagePage && <AddImage setImagePage={setImagePage}/>}
    </div>
  );
};

export default ImagesPage;
