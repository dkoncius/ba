import React, { useEffect, useState } from 'react';
import { BiFilterAlt } from "react-icons/bi";
import ContentFiltering from '../../components/ContentPage/ContentFiltering';
import AddImage from '../../components/ImagesPage/AddImage';
import ImageGallery from '../../components/ImagesPage/ImageGallery';
import { db } from '../../firebase/firebase-config'; // Adjust the import path as necessary
import { collection, getDocs } from 'firebase/firestore';

const ImagesPage = () => {
  const [selectedImage, setSelectedImage] = useState(null);
  const [data, setData] = useState([]);
  const [isFiltering, setIsFiltering] = useState(false);
  const [imagePage, setImagePage] = useState(false);

  useEffect(() => {
    const fetchImages = async () => {
      const imagesCollectionRef = collection(db, "images");
      const imagesSnapshot = await getDocs(imagesCollectionRef);
      const imagesList = imagesSnapshot.docs.map(doc => ({
        id: doc.id, // The unique ID generated by Firestore for each document
        ...doc.data(), // Spread the rest of the document data
      }));
      console
      setData(imagesList);
    };

    fetchImages();
  }, []);

  return (
    <div className="container">
      <div className="content-filter">
        <BiFilterAlt className="filter-icon" onClick={() => setIsFiltering(!isFiltering)} />
        <button 
          className="button-green"
          onClick={() => setImagePage(true)}
        >Pridėti nuotrauką +</button>
      </div>
  
      {isFiltering ? 
        <ContentFiltering setIsFiltering={setIsFiltering}/> : 
        <ImageGallery data={data} selectedImage={selectedImage} setSelectedImage={setSelectedImage}/>
      }
  
      {imagePage && <AddImage setImagePage={setImagePage}/>}
    </div>
  );
};

export default ImagesPage;
